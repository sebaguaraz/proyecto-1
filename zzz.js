// ## üìù Ejercicio: "Par o Impar con Retraso"
// Crea una funci√≥n llamada `esParConRetraso` que:
// 1. Acepte un n√∫mero como argumento
// 2. Devuelva una Promesa
// 3. La promesa debe resolverse despu√©s de 1 segundo con:
//    - ‚úÖ `true` si el n√∫mero es par
//    - ‚ùå `false` si el n√∫mero es impar
// 4. Si el input no es un n√∫mero, la promesa debe rechazarse con un error

const { isNumberObject } = require("util/types")

function esParConRetraso(num){
    return new Promise((resolve,reject)=>{
        if (Number(num)) { setTimeout(resolve(num),10000) }else{

        } setTimeout(reject(num),4000)
            
    })
}


esParConRetraso(12)
    .then(num => {
        console.log(`true` + "si el n√∫mero es par")
    })

    .catch(num => {
        console.log(`false` + "si el n√∫mero es par")
    })


